name: VM Heartbeat Monitor

on:
  repository_dispatch:
    types: [vm_heartbeat]
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:

jobs:
  record-heartbeat:
    if: github.event_name == 'repository_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Store heartbeat timestamp
        uses: actions/github-script@v7
        with:
          script: |
            const now = new Date().toISOString();
            await github.rest.actions.createOrUpdateRepoVariable({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'LAST_HEARTBEAT',
              value: now
            });
            console.log(`Heartbeat received at ${now}`);

  check-heartbeat:
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    outputs:
      is_alive: ${{ steps.check.outputs.is_alive }}
      minutes_since: ${{ steps.check.outputs.minutes_since }}
    steps:
      - name: Check last heartbeat
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const variable = await github.rest.actions.getRepoVariable({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: 'LAST_HEARTBEAT'
              });
              
              const lastHeartbeat = new Date(variable.data.value);
              const now = new Date();
              const minutesSince = (now - lastHeartbeat) / 1000 / 60;
              
              console.log(`Last heartbeat: ${lastHeartbeat.toISOString()}`);
              console.log(`Minutes since: ${minutesSince.toFixed(2)}`);
              
              core.setOutput('minutes_since', minutesSince.toFixed(2));
              
              if (minutesSince > 10) {
                console.log('VM DOWN');
                core.setOutput('is_alive', 'false');
              } else {
                console.log('VM OK');
                core.setOutput('is_alive', 'true');
              }
            } catch (error) {
              console.log('No heartbeat yet');
              core.setOutput('is_alive', 'unknown');
              core.setOutput('minutes_since', 'N/A');
            }

  alert-failure:
    needs: check-heartbeat
    if: needs.check-heartbeat.outputs.is_alive == 'false'
    uses: ./.github/workflows/squawk_failure.yml
    secrets: inherit

  restore-system:
    needs: [check-heartbeat, alert-failure]
    if: needs.check-heartbeat.outputs.is_alive == 'false'
    uses: ./.github/workflows/restore_from_scratch.yml
    secrets: inherit
