name: Heartbeat Monitor

on:
  repository_dispatch:
    types: [heartbeat]

  schedule:
    - cron: "*/3 * * * *"

permissions:
  contents: write

jobs:
  record-heartbeat:
    if: github.event_name == 'repository_dispatch' && github.event.action == 'heartbeat'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Update heartbeat file
        run: |
          timestamp="${{ github.event.client_payload.timestamp }}"
          hostname="${{ github.event.client_payload.hostname }}"
          
          # Initialize file if it doesn't exist
          if [ ! -f .last_heartbeat ]; then
            echo "$timestamp,$hostname" > .last_heartbeat
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add .last_heartbeat
            git commit -m "Initialize heartbeat at $timestamp from $hostname"
            git push
          else
            # Update existing file
            echo "$timestamp,$hostname" > .last_heartbeat
            git add .last_heartbeat
            git commit -m "Update heartbeat at $timestamp from $hostname" || echo "No changes to commit"
            git push

  check-heartbeat:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Read last heartbeat
        id: read_hb
        run: |
          if [ ! -f .last_heartbeat ]; then
            echo "No heartbeat file found"
            echo "hb_time=0" >> $GITHUB_OUTPUT
            echo "hb_host=unknown" >> $GITHUB_OUTPUT
          else
            IFS=',' read -r hb_time hb_host < .last_heartbeat
            echo "hb_time=$hb_time" >> $GITHUB_OUTPUT
            echo "hb_host=$hb_host" >> $GITHUB_OUTPUT
          fi

      - name: Compare timestamps
        id: compare
        run: |
          now=$(date +%s)
          hb_time=${{ steps.read_hb.outputs.hb_time }}
          hb_host=${{ steps.read_hb.outputs.hb_host }}
          
          if [ "$hb_time" -eq 0 ]; then
            echo "No heartbeat ever recorded"
            echo "stale=true" >> $GITHUB_OUTPUT
          else
            diff=$((now - hb_time))
            echo "Last heartbeat from $hb_host was $diff seconds ago"
            if [ $diff -gt 600 ]; then
              echo "stale=true" >> $GITHUB_OUTPUT
            else
              echo "stale=false" >> $GITHUB_OUTPUT
            fi
          fi


      - name: Alert failure
        if: steps.compare.outputs.stale == 'true'
        run: |
          echo "FAILURE!!"

      - name: Restore system
        if: steps.compare.outputs.stale == 'true'
        run: |
          echo "Running restore script for ${{ steps.read_hb.outputs.hb_host }}..."
          # Insert restore-from-scratch logic here
